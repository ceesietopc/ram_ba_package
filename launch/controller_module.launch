<?xml version="1.0"?>

<launch>
  <arg name="prefix" />
  <arg name="ip" />

  <group ns="$(arg prefix)">
    <node name="control" pkg="ram" type="controller" output="screen">
      <param name="setpoint_x" value="0" />         <!-- Setpoint in initial frame of quadcopter -->
      <param name="setpoint_y" value="0" />         <!-- Setpoint in initial frame of quadcopter -->
      <param name="setpoint_z" value="1.4" />         <!-- Setpoint in initial frame of quadcopter -->
      <param name="setpoint_yaw" value="0" />         <!-- Setpoint in initial frame of quadcopter -->
      <param name="gain_p_z" value="0.5" />           <!-- Translational P gain for lift -->
      <param name="gain_d_z" value="1" />           <!-- Translational D gain for lift -->
      <param name="gain_p_translational" value="0.09" />    <!-- Translational P gain for planar motion 0.25 -->
      <param name="gain_d_translational" value="0.16" />  <!-- Translational D gain for planar motion 0.29 -->
      <param name="gain_p_rotational" value="0.9" />    <!-- Rotational P gain -->
      <param name="gain_d_rotational" value="0.2" />      <!-- Rotational D gain -->
      <param name="simulation" value="false" />         <!-- True if data is to be read from Gazebo (TODO) -->
      <param name="hovermode" value="false" />         <!-- Enable hovermode if error in all directions is smaller than this value (TODO) -->
      <param name="hover_treshold" value="0.1" />       <!-- Hover treshold -->
      <param name="K" value="5" />              <!-- Integration gain for State Estimation Filter of error derivative -->
      <param name="uncertainty_band" value="0.08" />
      <param name="pose_memory" value="30" />
      <param name="publish_rate" value="35" />
      <param name="gain_velocity" value="-0.3" />
      <param name="velocity_damping" value="false" />
    </node>

    <node pkg="ram" type="state_estimation" name="state_estimation" output="screen">
      <param name="K" value="70" />               <!-- Integration gain for State Estimation Filter of position derivative -->
      <param name="uncertainty_band" value="0.01" />
      <param name="pose_memory" value="25" />
    </node>

    <node name="ardrone" pkg="ardrone_autonomy" type="ardrone_driver" output="screen" args="-ip $(arg ip)" clear_params="true">
      <param name="outdoor" value="0" />
      <param name="max_bitrate" value="4000" />
      <param name="bitrate" value="4000" />
      <param name="navdata_demo" value="False" />
          <param name="realtime_navdata" value="True" />
          <param name="realtime_video" value="True" />
          <param name="looprate" value="50" />
      <param name="navdata_demo" value="0" /> <!-- May need to be false for tag detection -->
      <!-- <param name="navdata_options" value="NAVDATA_OPTION_FULL_MASK" />  May need to be used for tag detection -->
      <param name="flight_without_shell" value="0" />
      <param name="altitude_max" value="3000" />
      <param name="altitude_min" value="50" />
      <param name="euler_angle_max" value="0.52" /> <!-- = max = 30 deg -->
      <param name="control_vz_max" value="700" />
      <param name="control_yaw" value="1.75" />
      <param name="detect_type" value="CAD_TYPE_VISION" /> <!-- value 2 for front camera (enemy color), value 3 - no detection, and value 4 - vertical camera roundel detection values. CAD_TYPE_VISION is 2d horizontal tags (hopefully the colored ones on the drone) -->
      <param name="enemy_colors" value="2" /><!-- Detect green,yellow, blue shell (1,2,3) -->
      <param name= "enemy_without_shell" value="0" /> <!-- Detect indoor/outdoor shells -->
      <!--  <param name="default_groundstripe_colors" value="ARDRONE_DETECTION_COLOR_ARRACE_FINISH_LINE" /> -->
      <param name="detections_select_h" value="32" />
      <param name="detections_select_v" value="0" /><!-- Bottom Camera detection disabled, was detections_select_v_hsync 128 -->
      <param name="enemy_without_shell" value="0" />
      <param name="do_imu_caliberation" value="true" />
      <param name="tf_prefix" value="mydrone" />
      <!-- Covariance Values (3x3 matrices reshaped to 1x9)-->
      <rosparam param="cov/imu_la">[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1]</rosparam>
      <rosparam param="cov/imu_av">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
      <rosparam param="cov/imu_or">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 100000.0]</rosparam>
    </node>
  </group>
</launch>  